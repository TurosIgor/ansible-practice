---
- name: Get deployment of pod
  kubernetes.core.k8s_info:
    kind: Deployment
    name: "{{ pod_name }}"
    namespace: "{{ pod_namespace }}"
  register: deployment

- name: Get statefulset if no deployment
  kubernetes.core.k8s_info:
    kind: StatefulSet
    name: "{{ pod_name }}"
    namespace: "{{ pod_namespace }}"
  register: statefulset
  when: deployment.resources | length == 0

- name: Get daemonset if no deployment or statefulset
  kubernetes.core.k8s_info:
    kind: DaemonSet
    name: "{{ pod_name }}"
    namespace: "{{ pod_namespace }}"
  register: daemonset
  when: deployment.resources | length == 0 and statefulset.resources | length == 0

- name: Evaluate controller
  ansible.builtin.set_fact:
    controller: >-
      {{ deployment.resources[0] if (deployment.resources | length > 0)
        else statefulset.resources[0] if (statefulset.resources | length > 0)
        else daemonset.resources[0] }}

- name: Describe controller
  ansible.builtin.debug:
    msg: "{{ controller }}"

- name: Get available replicas
  ansible.builtin.set_fact:
    available_replicas: >-
      "{{ controller.status.availableReplicas
        if controller.status.availableReplicas is defined
        else controller.status.numberAvailable
        if controller.status.numberAvailable is defined }}"

- name: Get desired replicas
  ansible.builtin.set_fact:
    desired_replicas: >-
      "{{ (controller.spec.replicas)
        if controller.spec.replicas is defined
        else controller.status.desiredNumberScheduled }}"

- name: Describe replica info
  ansible.builtin.debug:
    msg: "Desired:{{ desired_replicas }} Available:{{ available_replicas }}"

- name: Check if available replicas exist
  ansible.builtin.fail:
    msg: "{{ controller.metadata.name }} has no available replicas!"
  when: available_replicas is not defined

- name: Check if available replicas match desired
  ansible.builtin.fail:
    msg: "Some replicas aren't ready!\nDesired:{{ desired_replicas }}\nAvailable:{{ available_replicas }}"
  when: desired_replicas | int > available_replicas | int

- name: Get controller's match labels
  ansible.builtin.set_fact:
    match_labels: "{{ controller.spec.selector.matchLabels | items | map('join', '=') }}"

- name: Get all matching pods
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors: "{{ match_labels }}"
  register: pods

- name: Check pods' health
  ansible.builtin.fail:
    msg: "Pod {{ item.metadata.name }} is NOT ready!"
  when: >
    item.status.conditions | selectattr('type','equalto','Ready') | map(attribute='status') | first != 'True'
  loop: "{{ pods.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"
